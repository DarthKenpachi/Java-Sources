
import java.awt.*;
import javax.swing.*;

public class TestFigurePanel extends JFrame{
	public TestFigurePanel(){
		setLayout(new GridLayout(2,3,5,5));
		add(new FigurePanel(FigurePanel.LINE));
		add(new FigurePanel(FigurePanel.RECTANGLE));
		add(new FigurePanel(FigurePanel.ROUND_RECTANGLE));
		add(new FigurePanel(FigurePanel.OVAL));
		add(new FigurePanel(FigurePanel.RECTANGLE, true));
		add(new FigurePanel(FigurePanel.ROUND_RECTANGLE, true));
	}
	
	public static void main(String [] args){
		TestFigurePanel frame = new TestFigurePanel();
		frame.setSize(400,200);
		frame.setTitle("TestFigurePanel");
		frame.setLocationRelativeTo(null);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setVisible(true);
	}		
}




//FigurePanel.class declare and instantiate

import java.awt.*;
import javax.swing.JPanel;

public class FigurePanel extends JPanel {
	
	public static final int LINE = 1;
	public static final int RECTANGLE = 2;
	public static final int ROUND_RECTANGLE = 3;
	public static final int OVAL = 4;
	
	private int type = 1;
	private boolean filled = false;
	
	//construct a FigurePanel with the specified type
	public FigurePanel(int type){
		this.type = type;
	}
	
	//Construct a FigurePanel with the specified type and filled
	public FigurePanel(int type, boolean filled){
		this.type = type;
		this.filled = filled;
	}
	
	//Draw a figure on the panel
	protected void paintComponent(Graphics g){
		super.paintComponent(g);
		
		//Get appropriate size for figure
		int width = getWidth();
		int height = getHeight();
		
		switch (type){
		case LINE: 	//Display two cross lines
			g.setColor(Color.BLACK);
			g.drawLine(10, 10, width - 10, height - 10);
			g.drawLine(width - 10, 10, 10, height - 10);
			break;
		case RECTANGLE:  //draw rectangle
			g.setColor(Color.BLUE);
			if(filled)
				g.fillRect((int)(0.1 * width), (int)(0.1 * height),
						(int)(0.8 * width), (int)(0.8 * height));
			else
				g.drawRect((int)(0.1 * width), (int)(0.1 * height), 
						(int)(0.8 * width), (int)(0.8 * height));
			break;
		}
	}

}
